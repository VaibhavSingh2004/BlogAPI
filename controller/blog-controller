import  mongoose  from "mongoose";
import Blog from "../models/blogs.js"
import User from "../models/users.js"
export const getAllBlogs = async(req,res,next)=>{
    let blogs;
    try{
        blogs = await Blog.find();
    }catch(err){
        console.log(err);
    }

    if (!blogs){
        return res.status(404).json({message:"No Blogs found"})
    }else{
        return res.status(200).json({blogs:blogs})
    }
}


export const addBlogs = async (req,res,next)=>{
    const {title,description,image,user} = req.body
    let existingUser;
    try{
        existingUser = await User.findById(user)
    }catch(err){
        return console.log(err);
    }
    if (!existingUser){
        return res.status(400).json({message:"Unable to find user with this id"})
    }
    const blog = new Blog({
        title,
        description,
        image,
        user:user});
    try{
        const session = await mongoose.startSession();
        session.startTransaction();
        await blog.save({session});

        existingUser.blogs.push(blog);

        await existingUser.save({session});
        await session.commitTransaction();

    }catch(err){
        return console.log(err);
    }
    return res.status(200).json({
        message:"Blog saved Successfully",
        blog:blog
    })
}

export const updateBlog = async (req,res,next)=>{
    const {title,description}=req.body
    const blogId = req.params.id;
    let blog;
    try{
        blog = await Blog.findByIdAndUpdate(blogId,{
            title,
            description
        })
    }catch(err){
        return console.log(err);
    }
    if (!blog){
        return res.status(500).json({message:"Not Found"})
    }
    return res.status(200).json({message:"Updated"})

}

export const getById = async (req,res,next)=>{
    const id = req.params.id
    let blog;
    try{
        blog = await Blog.findById(id)
    }catch(err){
        return console.log(err);
    }
    if (!blog){
        return res.status(404).json({message:"No blog found"})
    }
    return res.status(200).json({blog})
}

export const deleteById = async (req,res,next)=>{
    const id = req.params.id
    let blog;
    try{
        blog = await Blog.findByIdAndDelete(id).populate("user")
        await blog.user.blogs.pull(blog);
        await blog.user.save();
    }catch(err){
        return console.log(err);
    }
    if (!blog){
        return res.status(404).json({message:"No blog found"})
    }
    
    return res.status(200).json({message:"blog deleted"})
}

export const getBlogByuserId = async (req,res,next) => {
    let userid = req.params.id;
    let userBlog;
    try{
        userBlog = await User.findById(userid).populate("blogs");
    }catch(err){
        return console.log(err);
    }
    if (!userBlog){
        return res.status(404).json({message:"user not found"})
    }
    return res.status(200).json({blogs:userBlog})


}
